#!/bin/bash
#
# To enable this hook, copy this file under name "commit-msg"
# to your project folder, into .git/hooks directory.
#
# note: if the hook fails with a non-zero status, the commit is aborted

jira_project_key="FOO|BAR|BAZ" # specify JIRA project keys here
# see "project key" at https://confluence.atlassian.com/display/JIRA/Defining+a+Project#DefiningaProject-Creatingaproject

branch="$(git rev-parse --abbrev-ref HEAD)" # current branch name
if [ -n "${branch}" ] ; then # branch name is not an empty string
  issueKey="$(echo ${branch} | grep -oP '('${jira_project_key}')-\d+' | tr [:cntrl:] ' ' | sed 's/\s*$//')" # issue key(s) of your JIRA project, parsed from GIT branch name;
  # issue key is build from project key, followed by an issue number (delimited by dash); FOO-123
  if [ -n "${issueKey}" ] ; then # an issue key(s) has been parsed
    commitMessage=$(cat $1) # $1 means input parameter - which is file with the commit message
    if [ -n "${commitMessage}" ] && [[ ${commitMessage} != "${issueKey}"* && ${commitMessage} != "fixup!"* && ${commitMessage} != "squash!"* ]]; then # original commit message does not start with issue key yet
      echo "issueKey $commitMessage" >"$1" # replace original commit message with new one with leading issue number
    fi
  fi
fi
